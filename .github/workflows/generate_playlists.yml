name: Generate M3U Playlists

on:
  schedule:
    # Runs every day at 3:00 AM UTC
    - cron: '0 3 * * *'
  workflow_dispatch: # Allows manual triggering from the Actions tab
  push:
    branches:
      - main # Optional: Run when the script itself is updated on the main branch
    paths:
      - 'generate_playlists.py'
      - '.github/workflows/generate_playlists.yml'

jobs:
  build-playlists:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Allow the job to push changes back to the repo

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Or your preferred Python version

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Run Playlist Generation Script
        run: python generate_playlists.py

      - name: Commit and Push Changes (Forced Attempt)
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          echo "--- Listing files in playlists directory ---"
          ls -la playlists/ || echo "playlists directory may not exist yet or is empty"

          echo "--- Running git status BEFORE add ---"
          git status

          echo "--- Attempting to stage ALL changes/files in playlists/ ---"
          git add playlists/ # Stage everything in the playlists directory

          echo "--- Running git status AFTER add ---"
          git status # See what was staged

          # Check if there are staged changes before committing
          # Use 'git diff --staged --quiet' which exits with 1 if there are staged changes
          if ! git diff --staged --quiet; then
            echo ">>> Staged changes detected, proceeding with commit."
            git commit -m "Update M3U playlists (forced attempt) [skip ci]"
          else
            echo ">>> No staged changes detected, skipping commit."
            # Even if no commit, try pushing in case a previous push failed.
          fi

          echo "--- Attempting git push ---"
          # Retry push with delay
          n=0
          until [ $n -ge 5 ]
          do
             # Attempt push regardless of whether commit happened (idempotent if up-to-date)
             git push && break # Try to push
             n=$((n+1))
             echo "Push failed. Retrying attempt $n/5..."
             sleep 15
          done
          if [ $n -ge 5 ]; then
             echo "Failed to push changes after multiple attempts."
             # Decide if this should be an error - often safe to ignore if commit didn't happen
             # exit 1 # Optionally exit with error
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
